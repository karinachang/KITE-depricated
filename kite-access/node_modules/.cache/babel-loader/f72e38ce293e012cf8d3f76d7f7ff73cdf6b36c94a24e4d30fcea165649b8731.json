{"ast":null,"code":"var _jsxFileName = \"/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../CSS/Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Helper function to format the file sizes\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  // Event handlers for drag and drop functionality\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const newFiles = e.dataTransfer.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n  const handleChange = e => {\n    const newFiles = e.target.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  // Function to handle files selected by drag and drop or file input\n  // and add them to the state\n  const handleFiles = newFiles => {\n    const mappedFiles = Array.from(newFiles).map(file => ({\n      name: file.name,\n      size: formatBytes(file.size)\n    }));\n    setFiles(prevFiles => [...prevFiles, ...mappedFiles]);\n  };\n\n  // Placeholder function for handling the actual upload process\n  const handleUpload = () => {\n    console.log(\"Files to upload:\", files);\n    // Here, you would send the files to your backend server using fetch/axios\n  };\n  useEffect(() => {\n    // This effect will run once after the initial render\n    const preventDefault = e => {\n      e.preventDefault();\n    };\n\n    // Prevent the default drag and drop behavior for the window\n    window.addEventListener(\"dragover\", preventDefault);\n    window.addEventListener(\"drop\", preventDefault);\n\n    // Cleanup the window event listeners on unmount\n    return () => {\n      window.removeEventListener(\"dragover\", preventDefault);\n      window.removeEventListener(\"drop\", preventDefault);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `drop-zone ${dragActive ? \"active\" : \"\"}`,\n      onDragEnter: handleDrag,\n      onDragOver: handleDrag,\n      onDragLeave: handleDrag,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\" // Add an id to the file input\n        ,\n        type: \"file\",\n        className: \"file-input\",\n        onChange: handleChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-message\",\n        children: [\"Drag and drop files here or\", \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-link\",\n          children: \"browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"iyiMjKRlSCptS5V7Gh0p9RDqe7k=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","dragActive","setDragActive","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","handleDrag","e","preventDefault","stopPropagation","type","handleDrop","newFiles","dataTransfer","handleFiles","handleChange","target","mappedFiles","Array","from","map","file","name","size","prevFiles","handleUpload","console","useEffect","window","addEventListener","removeEventListener","className","children","onDragEnter","onDragOver","onDragLeave","onDrop","id","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../CSS/Upload.css\";\n\nfunction Upload() {\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Helper function to format the file sizes\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  // Event handlers for drag and drop functionality\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const newFiles = e.dataTransfer.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  const handleChange = (e) => {\n    const newFiles = e.target.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  // Function to handle files selected by drag and drop or file input\n  // and add them to the state\n  const handleFiles = (newFiles) => {\n    const mappedFiles = Array.from(newFiles).map((file) => ({\n      name: file.name,\n      size: formatBytes(file.size),\n    }));\n    setFiles((prevFiles) => [...prevFiles, ...mappedFiles]);\n  };\n\n  // Placeholder function for handling the actual upload process\n  const handleUpload = () => {\n    console.log(\"Files to upload:\", files);\n    // Here, you would send the files to your backend server using fetch/axios\n  };\n\n  useEffect(() => {\n    // This effect will run once after the initial render\n    const preventDefault = (e) => {\n      e.preventDefault();\n    };\n\n    // Prevent the default drag and drop behavior for the window\n    window.addEventListener(\"dragover\", preventDefault);\n    window.addEventListener(\"drop\", preventDefault);\n\n    // Cleanup the window event listeners on unmount\n    return () => {\n      window.removeEventListener(\"dragover\", preventDefault);\n      window.removeEventListener(\"drop\", preventDefault);\n    };\n  }, []);\n\n  return (\n    <div className=\"upload-container\">\n      <form\n        className={`drop-zone ${dragActive ? \"active\" : \"\"}`}\n        onDragEnter={handleDrag}\n        onDragOver={handleDrag}\n        onDragLeave={handleDrag}\n        onDrop={handleDrop}\n      >\n        <input\n          id=\"file-upload\" // Add an id to the file input\n          type=\"file\"\n          className=\"file-input\"\n          onChange={handleChange}\n          multiple\n        />\n        <div className=\"drop-message\">\n          Drag and drop files here or{\" \"}\n          <label htmlFor=\"file-upload\" className=\"upload-link\">\n            browse\n          </label>\n        </div>\n        {/* ... (rest of your form) */}\n      </form>\n      {/* ... (rest of your component) */}\n    </div>\n  );\n}\n\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}