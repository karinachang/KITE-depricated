{"ast":null,"code":"var _jsxFileName = \"/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../CSS/Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Function to convert file size to a readable format\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n  const handleFiles = files => {\n    // Add the files to the state\n    const fileList = Array.from(files).map(file => ({\n      name: file.name,\n      size: file.size,\n      formattedSize: formatBytes(file.size)\n    }));\n    setFiles(fileList);\n    // Here you can also call a function to handle the upload to the server\n  };\n\n  // Existing code for drag and drop handling...\n\n  // New handleDrop function\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const files = e.dataTransfer.files;\n    handleFiles(files);\n  };\n\n  // New handleChange function\n  const handleChange = e => {\n    const files = e.target.files;\n    handleFiles(files);\n  };\n\n  // Demo function to upload files (to be implemented with actual backend logic)\n  const uploadFiles = () => {\n    console.log(\"Uploading files:\", files);\n    // Here you would typically use fetch or axios to send the files to your server\n    // Example: axios.post('/upload', filesData)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-size\",\n          children: file.formattedSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFiles,\n      children: \"UPLOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"IVNGvEKkl308en9/j2dqy1Zt2Mg=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","dragActive","setDragActive","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","handleFiles","fileList","Array","from","map","file","name","size","formattedSize","handleDrop","e","preventDefault","stopPropagation","dataTransfer","handleChange","target","uploadFiles","console","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../CSS/Upload.css\";\n\nfunction Upload() {\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Function to convert file size to a readable format\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  const handleFiles = (files) => {\n    // Add the files to the state\n    const fileList = Array.from(files).map((file) => ({\n      name: file.name,\n      size: file.size,\n      formattedSize: formatBytes(file.size),\n    }));\n    setFiles(fileList);\n    // Here you can also call a function to handle the upload to the server\n  };\n\n  // Existing code for drag and drop handling...\n\n  // New handleDrop function\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const files = e.dataTransfer.files;\n    handleFiles(files);\n  };\n\n  // New handleChange function\n  const handleChange = (e) => {\n    const files = e.target.files;\n    handleFiles(files);\n  };\n\n  // Demo function to upload files (to be implemented with actual backend logic)\n  const uploadFiles = () => {\n    console.log(\"Uploading files:\", files);\n    // Here you would typically use fetch or axios to send the files to your server\n    // Example: axios.post('/upload', filesData)\n  };\n\n  return (\n    <div className=\"upload-container\">\n      {/* Existing code for drag and drop area */}\n\n      {/* File list display */}\n      <div className=\"file-list\">\n        {files.map((file, index) => (\n          <div key={index} className=\"file-item\">\n            <span className=\"file-name\">{file.name}</span>\n            <span className=\"file-size\">{file.formattedSize}</span>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={uploadFiles}>UPLOAD</button>\n    </div>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}