{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Documents\\\\KITE\\\\Web\\\\src\\\\Pages\\\\Uploaded.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport \"../CSS/Uploaded.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Uploaded = () => {\n  _s();\n  const [code, setCode] = useState(\"318278\");\n  const [showQR, setShowQR] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [uploadComplete, setUploadComplete] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 100) {\n          clearInterval(interval);\n          setUploadComplete(true);\n          return 100;\n        }\n        return Math.min(oldProgress + 20, 100); // increment by 20% every second\n      });\n    }, 1000); // 1000 milliseconds = 1 second\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const copyCodeToClipboard = () => {\n    navigator.clipboard.writeText(code);\n    alert(\"Code copied to clipboard!\");\n  };\n  const copyLinkToClipboard = () => {\n    const baseUrl = window.location.origin;\n    navigator.clipboard.writeText(`${baseUrl}/${code}`);\n    alert(\"Link copied to clipboard!\");\n  };\n  const toggleQRCode = () => {\n    setShowQR(!showQR);\n  };\n  const getLink = () => {\n    return `${window.location.origin}/${code}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"./home\",\n        className: \"kite-link\",\n        children: \"KITE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = \"./Upload\",\n        className: \"Upload-button\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress ${uploadComplete ? \"progress-complete\" : \"\"}`,\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !uploadComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-message\",\n      children: \"Please do not reload the page. Upon uploading a code will be generated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), uploadComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-box\",\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), showQR && /*#__PURE__*/_jsxDEV(QRCode, {\n        value: getLink()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyCodeToClipboard,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyLinkToClipboard,\n          children: \"Get sharable link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleQRCode,\n          children: \"Generate QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Uploaded, \"HdfZ7v+yL4wdNpYxJM1m7m/unSc=\");\n_c = Uploaded;\nexport default Uploaded;\nvar _c;\n$RefreshReg$(_c, \"Uploaded\");","map":{"version":3,"names":["React","useState","useEffect","QRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","Uploaded","_s","code","setCode","showQR","setShowQR","progress","setProgress","uploadComplete","setUploadComplete","interval","setInterval","oldProgress","clearInterval","Math","min","copyCodeToClipboard","navigator","clipboard","writeText","alert","copyLinkToClipboard","baseUrl","window","location","origin","toggleQRCode","getLink","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","value","_c","$RefreshReg$"],"sources":["C:/Users/ethan/Documents/KITE/Web/src/Pages/Uploaded.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport \"../CSS/Uploaded.css\";\r\n\r\nconst Uploaded = () => {\r\n  const [code, setCode] = useState(\"318278\");\r\n  const [showQR, setShowQR] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadComplete, setUploadComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          clearInterval(interval);\r\n          setUploadComplete(true);\r\n          return 100;\r\n        }\r\n        return Math.min(oldProgress + 20, 100); // increment by 20% every second\r\n      });\r\n    }, 1000); // 1000 milliseconds = 1 second\r\n\r\n    return () => clearInterval(interval); // Cleanup on component unmount\r\n  }, []);\r\n\r\n  const copyCodeToClipboard = () => {\r\n    navigator.clipboard.writeText(code);\r\n    alert(\"Code copied to clipboard!\");\r\n  };\r\n\r\n  const copyLinkToClipboard = () => {\r\n    const baseUrl = window.location.origin;\r\n    navigator.clipboard.writeText(`${baseUrl}/${code}`);\r\n    alert(\"Link copied to clipboard!\");\r\n  };\r\n\r\n  const toggleQRCode = () => {\r\n    setShowQR(!showQR);\r\n  };\r\n\r\n  const getLink = () => {\r\n    return `${window.location.origin}/${code}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <header className=\"App-header\">\r\n        <a href=\"./home\" className=\"kite-link\">\r\n          KITE\r\n        </a>\r\n        <button\r\n          onClick={() => (window.location.href = \"./Upload\")}\r\n          className=\"Upload-button\"\r\n        >\r\n          Upload\r\n        </button>\r\n      </header>\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className={`progress ${uploadComplete ? \"progress-complete\" : \"\"}`}\r\n          style={{ width: `${progress}%` }}\r\n        ></div>\r\n      </div>\r\n      {!uploadComplete && (\r\n        <div className=\"upload-message\">\r\n          Please do not reload the page. Upon uploading a code will be\r\n          generated.\r\n        </div>\r\n      )}\r\n      {uploadComplete && (\r\n        <>\r\n          <div className=\"code-box\">{code}</div>\r\n          {showQR && <QRCode value={getLink()} />}\r\n          <div className=\"button-container\">\r\n            <button onClick={copyCodeToClipboard}>Copy</button>\r\n            <button onClick={copyLinkToClipboard}>Get sharable link</button>\r\n            <button onClick={toggleQRCode}>Generate QR Code</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploaded;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}