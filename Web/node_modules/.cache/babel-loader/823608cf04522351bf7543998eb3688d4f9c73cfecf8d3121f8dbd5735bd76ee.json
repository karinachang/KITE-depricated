{"ast":null,"code":"var _jsxFileName = \"/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js\",\n  _s = $RefreshSig$();\n// Upload.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../CSS/Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Add the effect hook here\n  useEffect(() => {\n    const preventDefault = e => {\n      e.preventDefault();\n    };\n    window.addEventListener(\"dragover\", preventDefault);\n    window.addEventListener(\"drop\", preventDefault);\n    return () => {\n      window.removeEventListener(\"dragover\", preventDefault);\n      window.removeEventListener(\"drop\", preventDefault);\n    };\n  }, []);\n\n  // Helper function to format the file sizes\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  // Event handlers for drag and drop functionality\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const newFiles = e.dataTransfer.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n  const handleChange = e => {\n    const newFiles = e.target.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  // Function to handle files selected by drag and drop or file input\n  const handleFiles = newFiles => {\n    const mappedFiles = Array.from(newFiles).map(file => ({\n      name: file.name,\n      size: formatBytes(file.size)\n    }));\n    setFiles(prevFiles => [...prevFiles, ...mappedFiles]);\n  };\n\n  // Placeholder function for handling the actual upload process\n  const handleUpload = () => {\n    console.log(\"Files to upload:\", files);\n    // Here, you would send the files to your backend server using fetch/axios\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: `drop-zone ${dragActive ? \"active\" : \"\"}`,\n      onDragEnter: handleDrag,\n      onDragOver: handleDrag,\n      onDragLeave: handleDrag,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        className: \"file-input\",\n        onChange: handleChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-message\",\n        children: [\"Drag and drop files here or\", \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-link\",\n          children: \"browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-display-container\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-status-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: [\"(\", file.size, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"iyiMjKRlSCptS5V7Gh0p9RDqe7k=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","dragActive","setDragActive","preventDefault","e","window","addEventListener","removeEventListener","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","handleDrag","stopPropagation","type","handleDrop","newFiles","dataTransfer","handleFiles","handleChange","target","mappedFiles","Array","from","map","file","name","size","prevFiles","handleUpload","console","className","children","onDragEnter","onDragOver","onDragLeave","onDrop","id","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","index","onClick","_c","$RefreshReg$"],"sources":["/Users/iftesamnabi/Desktop/Local Storage/Study/kite-access/src/Pages/Upload.js"],"sourcesContent":["// Upload.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../CSS/Upload.css\";\n\nfunction Upload() {\n  const [files, setFiles] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Add the effect hook here\n  useEffect(() => {\n    const preventDefault = (e) => {\n      e.preventDefault();\n    };\n\n    window.addEventListener(\"dragover\", preventDefault);\n    window.addEventListener(\"drop\", preventDefault);\n\n    return () => {\n      window.removeEventListener(\"dragover\", preventDefault);\n      window.removeEventListener(\"drop\", preventDefault);\n    };\n  }, []);\n\n  // Helper function to format the file sizes\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  // Event handlers for drag and drop functionality\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const newFiles = e.dataTransfer.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  const handleChange = (e) => {\n    const newFiles = e.target.files;\n    if (newFiles) {\n      handleFiles(newFiles);\n    }\n  };\n\n  // Function to handle files selected by drag and drop or file input\n  const handleFiles = (newFiles) => {\n    const mappedFiles = Array.from(newFiles).map((file) => ({\n      name: file.name,\n      size: formatBytes(file.size),\n    }));\n    setFiles((prevFiles) => [...prevFiles, ...mappedFiles]);\n  };\n\n  // Placeholder function for handling the actual upload process\n  const handleUpload = () => {\n    console.log(\"Files to upload:\", files);\n    // Here, you would send the files to your backend server using fetch/axios\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <form\n        className={`drop-zone ${dragActive ? \"active\" : \"\"}`}\n        onDragEnter={handleDrag}\n        onDragOver={handleDrag}\n        onDragLeave={handleDrag}\n        onDrop={handleDrop}\n      >\n        <input\n          id=\"file-upload\"\n          type=\"file\"\n          className=\"file-input\"\n          onChange={handleChange}\n          multiple\n        />\n        <div className=\"drop-message\">\n          Drag and drop files here or{\" \"}\n          <label htmlFor=\"file-upload\" className=\"upload-link\">\n            browse\n          </label>\n        </div>\n        {files.length > 0 && (\n          <div className=\"file-display-container\">\n            {files.map((file, index) => (\n              <div className=\"file-status-bar\" key={index}>\n                <div>\n                  <span className=\"file-name\">{file.name}</span>\n                  <span className=\"file-size\">({file.size})</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </form>\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n}\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}